{{#operations}}
/*
 * {{description}}
 */
api.load("{{baseName}}", "{{invokerPackage}}", function(ns) {

    //This is admittedly a little counter-intuitive.  The purpose of this loading function is to allow the calling
    //code to control how the sdk is bound into javascript.  This line essentially bypasses that by overriding the
    //passed in parameter.  We just need to decide which approach we want to take.  This particular case seems like
    //a decent candidate to bind directly into the api.[version] namespace.  It's a well-understood structure, and
    //it allows for better tooling.
    ns = api.{{invokerPackage}};

    ns.{{baseName}}Service = {};
{{#operation}}{{newline}}
    /**
     * {{summary}}
     *
     * {{notes}}
     *
{{#allParams}}{{newline}}     * {{paramName}}: {{description}}{{newline}}
{{/allParams}}{{newline}}
     */
    ns.{{baseName}}Service.{{nickname}} = function({{#allParams}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})  {
        //Stub implementation goes here
    };
{{/operation}}

});

{{/operations}}
